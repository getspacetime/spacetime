@inherits Fluxor.Blazor.Web.Components.FluxorComponent
@using Spacetime.Settings

@inject ISettingsService SettingsService
@inject IState<SettingState> SettingState
@inject IDispatcher Dispatcher
@inject ISnackbar Snackbar

<Fluxor.Blazor.Web.StoreInitializer />

<div class="@(SettingState.Value.Settings.DarkMode ? "dark" : "")">
<Router AppAssembly="@GetType().Assembly">
    <Found Context="routeData">
        <CascadingValue Name="DarkMode" Value="@SettingState.Value.Settings.DarkMode">
            <RouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)" />
        </CascadingValue>
    </Found>
    <NotFound>
        <LayoutView Layout="@typeof(MainLayout)">
            <p>Sorry, there's nothing at this address.</p>
        </LayoutView>
    </NotFound>
</Router>
</div>

<MudThemeProvider IsDarkMode="@SettingState.Value.Settings.DarkMode" Theme="Theme.Theme" />
<MudDialogProvider />
<MudSnackbarProvider />

@code {

    protected override Task OnInitializedAsync()
    {
        Snackbar.Configuration.PositionClass = Defaults.Classes.Position.BottomLeft;

        Dispatcher.Dispatch(new FetchSettingsAction());

        return Task.CompletedTask;
    }
}