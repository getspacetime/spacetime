@page "/"
@inject ILogger<Home> Logger
@using BlazorMonaco
@using BlazorMonaco.Editor
@using BlazorMonaco.Languages

<PageTitle>Home</PageTitle>

<aside class="sticky w-44 h-full shrink-0 bg-white text-slate-900 border-r text-sm divide-y divide-gray-300">
    <div>
        <input type="text" name="filter-requests" id="filter-requests"
            class="block w-full rounded-sm border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6"
            placeholder="Search">
    </div>
    
    @foreach (var req in requests)
    {
        <div class="px-1 py-2 hover:bg-slate-50 cursor-pointer truncate">@req.Name</div>
    }
</aside>

<main class="flex-1 overflow-auto w-96 shrink-0">
    <div>
  <label for="phone-number" class="block text-sm font-medium leading-6 text-gray-900">Request</label>
  <div class="relative mt-2 rounded-md shadow-sm">
    <div class="absolute inset-y-0 left-0 flex items-center">
      <label for="country" class="sr-only">HTTP Method</label>
      <select id="httpMethod" name="httpMethod" class="h-full rounded-md border-0 bg-transparent py-0 pl-3 pr-7 text-gray-500 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm">
        <option>GET</option>
        <option>POST</option>
        <option>PUT</option>
        <option>DELETE</option>
      </select>
    </div>
    <input type="text" name="requestUrl" id="requestUrl" class="block w-full rounded-md border-0 py-1.5 pl-16 text-gray-900 ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6" placeholder="https://pureblazor.com/api/content/articles">
  </div>
</div>
    <textarea rows="25" class="w-full"></textarea>
</main>

<aside class="sticky w-96 shrink-0">
    response here
    <!-- Right column area -->
</aside>

@code {
private StandaloneCodeEditor _editor = null!;
    private string _valueToSet = "";
    private string[] decorationIds = new string[0];

    private StandaloneEditorConstructionOptions EditorConstructionOptions(StandaloneCodeEditor editor)
    {
        Logger.LogInformation("EditorConstructionOptions called");
        return new StandaloneEditorConstructionOptions
        {
            Language = "javascript",
            GlyphMargin = true,
            Value = "\"use strict\";\n" +
                    "function Person(age) {\n" +
                    "	if (age) {\n" +
                    "		this.age = age;\n" +
                    "	}\n" +
                    "}\n" +
                    "Person.prototype.getAge = function () {\n" +
                    "	return this.age;\n" +
                    "};\n"
        };
    }

        private async Task EditorOnDidInit()
    {
        Logger.LogInformation("EditorOnDidInit called");
        await _editor.AddCommand((int)KeyMod.CtrlCmd | (int)KeyCode.KeyH, (args) =>
        {
            Console.WriteLine("Ctrl+H : Initial editor command is triggered.");
        });

        var newDecorations = new ModelDeltaDecoration[]
        {
            new ModelDeltaDecoration
            {
                Range = new BlazorMonaco.Range(3,1,3,1),
                Options = new ModelDecorationOptions
                {
                    IsWholeLine = true,
                    ClassName = "decorationContentClass",
                    GlyphMarginClassName = "decorationGlyphMarginClass"
                }
            }
        };

        decorationIds = await _editor.DeltaDecorations(null, newDecorations);
        // You can now use 'decorationIds' to change or remove the decorations
    }
    private List<SpacetimeRequest> requests = new List<SpacetimeRequest> {
new SpacetimeRequest {Id = 1,Type = SpacetimeType.REST, Name = "Test Request 1"},
new SpacetimeRequest {Id = 1,Type = SpacetimeType.REST, Name = "Test Request 3"},
new SpacetimeRequest {Id = 1,Type = SpacetimeType.REST, Name = "Test Request 4"},
new SpacetimeRequest {Id = 1,Type = SpacetimeType.REST, Name = "https://pureblazor.com/api/content/articles"}
};
}